
name: Github Pages

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

  schedule:
    # 05:00 +0800
    - cron: '0 21 * * *'

env:
  GITHUB_REPOSITORY: ${{ github.repository }}
  GITHUB_EVENT_NAME: ${{ github.event.pusher.name }}
  GITHUB_EVENT_EMAIL: ${{ github.event.pusher.email }}
  GITHUB_WORKSPACE: ${{ github.workspace }}

# directory /home/runner/work/centixkadon.github.io/centixkadon.github.io
# bash_account runner.docker
# docker_account runneradmin.runneradmin

jobs:
  github-pages:
    runs-on: ubuntu-latest

    environment: github-pages

    steps:
      - name: Dump Context
        run: |
          echo github "${{ toJson(github) }}"
          echo job "${{ toJson(job) }}"
          echo steps "${{ toJson(steps) }}"
          echo runner "${{ toJson(runner) }}"
          echo strategy "${{ toJson(strategy) }}"
          echo matrix "${{ toJson(matrix) }}"

      - name: Environment Bash
        run: bash --version

      - name: Environment Linux
        run: uname --all

      - name: Environment Ubuntu
        run: lsb_release --all

      - name: Environment Git
        run: git --version

      - name: Environment Ruby
        id: ruby
        run: |
          ruby --version
          echo "::set-output name=version::$(ruby <<< puts\ RUBY_VERSION)"

      - name: Environment Docker
        run: docker --version

      - name: Checkout
        uses: actions/checkout@v2

      - name: Git Log
        id: git-log
        run: |
          echo commit-hash "$(git log --max-count=1 --pretty=%H)"
          echo commit-title "$(git log --max-count=1 --pretty=%s)"
          echo "::set-output name=commit-hash::$(git log --max-count=1 --pretty=%H)"
          echo "::set-output name=commit-title::$(git log --max-count=1 --pretty=%s)"

      - name: Cache Ruby
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-ruby-v${{ steps.ruby.outputs.version }}-${{ hashFiles('Gemfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-ruby-v${{ steps.ruby.outputs.version }}-${{ hashFiles('Gemfile.lock') }}
            ${{ runner.os }}-ruby-v${{ steps.ruby.outputs.version }}-

      - name: Git Clone
        if: ${{ github.event_name != 'schedule' }}
        run: |
          git clone --branch gh-pages --depth 1 https://${{ secrets.JEKYLL_GITHUB_PAGES }}@github.com/${{ github.repository }}.git ${{ github.workspace }}/_site
          mkdir --parents ${{ github.workspace }}/empty
          rsync --recursive --del --exclude .git ${{ github.workspace }}/empty/ ${{ github.workspace }}/_site
          mkdir --parents ${{ github.workspace }}/vendor/bundle
          chmod --recursive 777 ${{ github.workspace }}/vendor/bundle
          chmod 777 ${{ github.workspace }}
          chmod 777 ${{ github.workspace }}/Gemfile.lock
          chmod 777 ${{ github.workspace }}/_site

      - name: Jekyll Build
        if: ${{ github.event_name != 'schedule' }}
        run: |
          tree -lpugFL 3 ..
          docker run --volume ${{ github.workspace }}:/srv/jekyll jekyll/builder:latest /bin/bash -c "bundle config set path vendor/bundle && bundle config set clean true && bundle install --jobs=4 --retry=3 && PAGES_REPO_NWO=${{ github.repository }} bundle exec jekyll build --trace --future"

      - name: Git Push
        if: ${{ github.event_name != 'schedule' }}
        env:
          COMMIT_HASH: ${{ steps.git-log.outputs.commit-hash }}
          COMMIT_TITLE: ${{ steps.git-log.outputs.commit-title }}
        run: |
          cd ${{ github.workspace }}/_site
          git config --global user.name "${GITHUB_EVENT_NAME}"
          git config --global user.email "${GITHUB_EVENT_EMAIL}"
          git add .
          git commit --message "update by ${COMMIT_HASH}

          ${COMMIT_TITLE}" || echo nothing to commit
          git push --force-with-lease
